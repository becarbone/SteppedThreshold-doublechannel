
var sourcedir, punctadir, sourcelist, punctalist, count, punctadir, punctalist;
var channel1, channel2, channel, title, title1, number, area, name1Array, name2Array, slice, AvgcountArray;
var chan12count, chan21count, AvgareaArray, countArray, areaArray, g;
waitForUser("This macro needs several folders: \n-two with the separate channel images \n-two empty ones for the puncta \n-two empty ones for masks\n-one empty one for the coloc images");
source1dir = getDirectory("Choose folder for Channel 1");
source1list = getFileList(source1dir);
Dialog.create("");
	colos = newArray("Green","Red","Blue","Cyan");
	Dialog.addChoice("Channel 1 color",colos,"Green");
Dialog.show;
channel1 = Dialog.getChoice;
source2dir = getDirectory("Choose folder for Channel 2");
source2list = getFileList(source2dir);
Dialog.create("");
	Dialog.addChoice("Channel 2 color",colos,"Red");
Dialog.show;
channel2 = Dialog.getChoice;
puncta1dir = getDirectory("Choose folder for "+channel1+" puncta");
threshold1dir = getDirectory("Choose folder to save processed "+channel1+" images in");
puncta2dir = getDirectory("Choose folder for "+channel2+" puncta");
threshold2dir = getDirectory("Choose folder to save processed "+channel2+" images in");
colocdir = getDirectory("Choose folder to save processed colocalized images in");
print("Title,threshold(non-inverted),puncta,average area");

name1Array = newArray();
name2Array = newArray();

l="thresholding";
for(t=0;t<160;t+=3){
		l=l+","+t;
	}
Avg1countArray = newArray(l,"");
Avg1areaArray = newArray(l,"");
Avg2countArray = newArray(l,"");
Avg2areaArray = newArray(l,"");
for(i=0;i<source1list.length;i++){
	open(source1dir+source1list[i]);
	title = getTitle();
	run("Properties...", "channels=1 slices=1 frames=1 unit=um pixel_width=0.1705 pixel_height=0.1705 voxel_depth=1");
	run("Gaussian Blur...", "sigma=1");
	setColor("Magenta");
	Num = title;
	are = title;
	g = 1;
	for(t=0;t<160;t+=3) {
		selectImage(title);
		titlet = substring(title,0, lengthOf(title)-4);
		name1Array = Array.concat(name1Array,titlet+"_"+t);
		mask();
		count = title+"_"+channel1+","+t+","+number+","+area+"\n";
		Num = Num + "," + number;
		are = are + "," + area;
		print(count);
	}
	Avg1countArray = Array.concat(Avg1countArray,Num);
	Avg1areaArray = Array.concat(Avg1areaArray,are);
	print("");
	selectImage(title);
	close();
	selectWindow(title+"_"+channel1+0+"_mask");
	run("Select None");
	setSlice(1);
	run("Set Label...", "label="+titlet+"_"+0);
	run("Label...", "format=Label starting=0 interval=1 x=5 y=5 font=8 text=[] range=1-51 use");
	saveAs("Tiff",threshold1dir+titlet);
	close();
	
	
	open(source2dir+source2list[i]);
	title = getTitle();
	run("Properties...", "channels=1 slices=1 frames=1 unit=um pixel_width=0.1705 pixel_height=0.1705 voxel_depth=1");
	run("Gaussian Blur...", "sigma=1");
	Num = title;
	are = title;
	g = 2;
	for(t=0;t<160;t+=3) {
		selectImage(title);
		titlet = substring(title,0, lengthOf(title)-4);
		name2Array = Array.concat(name2Array,titlet+"_"+t);
		mask();
		count = title+"_"+channel2+","+t+","+number+","+area+"\n";
		Num = Num + "," + number;
		are = are + "," + area;
		print(count);
	}

	Avg2countArray = Array.concat(Avg2countArray,Num);
	Avg2areaArray = Array.concat(Avg2areaArray,are);
	print("");
	selectImage(title);
	close();
	selectWindow(title+"_"+channel2+0+"_mask");
	run("Select None");
	setSlice(1);
	run("Set Label...", "label="+titlet+"_"+0);
	run("Label...", "format=Label starting=0 interval=1 x=5 y=5 font=8 text=[] range=1-51 use");
	saveAs("Tiff",threshold2dir+titlet);
	close();
	
}
Array.show(Avg1countArray);
Array.show(Avg1areaArray);
Array.show(Avg2countArray);
Array.show(Avg2areaArray);

selectWindow("Log");
saveAs("Text", colocdir+"Thresholding.csv");
run("Close");

threshold1list = getFileList(threshold1dir);
threshold2list = getFileList(threshold2dir);
puncta1list = getFileList(puncta1dir);
puncta2list = getFileList(puncta2dir);

overlay();

print(channel1+" ROI over "+channel2+" mask,puncta,"+channel2+" ROI over "+channel1+" mask,puncta");
chan21Array = newArray(l,"");
chan12Array = newArray(l,"");
a=0;
for (i=0;i<threshold1list.length;i++) {
	open(threshold1dir+threshold1list[i]);
	run("Stack to Images");
	open(threshold2dir+threshold2list[i]);
	run("Stack to Images");
	for(s=0;s<(nImages/2);s++) {
		t=0;
		chan12count = name1Array[a];
		chan21count = name2Array[a];
		while(t<160) {	
			chan12 = titlet+"_12_"+t;
			chan21 = titlet+"_21_"+t;	
			count=0;
			if(File.exists(puncta1dir+"ROI_"+name1Array[a]+".zip")==1) {
				run("Clear Results");
				roiManager("reset");
				selectImage(name2Array[a]);
				roiManager("open",puncta1dir+"ROI_"+name1Array[a]+".zip");
				roiManager("Measure");
				for(o=0;o<roiManager("Count");o++) {
					if(getResult("%Area",o) >= 25 ) {
					count++;
					}
				}
			chan12 = chan12+","+count;
			chan12count=chan12count+","+count;
			}
			count=0;				
			if(File.exists(puncta2dir+"ROI_"+name2Array[a]+".zip")==1) {
				run("Clear Results");
				roiManager("reset");
				selectImage(name1Array[a]);
				roiManager("open",puncta2dir+"ROI_"+name2Array[a]+".zip");
				roiManager("Measure");
				for(f=0;f<roiManager("Count");f++) {
					if(getResult("%Area",f) >= 25 ) {
						count++;
					}
				}
			}
			chan21 = chan21+","+count;
			chan21count=chan21count+","+count;
			t=t+3;
			print(chan12+","+chan21);
			}
		a=a+1;
		print("");
		run("Close All");
		chan12Array = Array.concat(chan12Array,chan12count);
		chan21Array = Array.concat(chan21Array,chan21count);
	}
}
Array.show(chan12Array);
Array.show(chan21Array);


selectWindow("Avg1countArray");
saveAs("Text", threshold1dir+"Avg1countArray.csv");
selectWindow("Avg1areaArray");
saveAs("Text", threshold1dir+"Avg1areaArray.csv");
selectWindow("Avg2countArray");
saveAs("Text", threshold2dir+"Avg2countArray.csv");
selectWindow("Avg2areaArray");
saveAs("Text", threshold2dir+"Avg2areaArray.csv");
selectWindow("chan12Array");
saveAs("Text", colocdir+"chan12Array.csv");
selectWindow("chan21Array");
saveAs("Text", colocdir+"chan21Array.csv");
selectWindow("Log");
saveAs("Text", colocdir+"Colocalization.csv");
run("Close");

function mask() {
	title1= getTitle();
	run("Clear Results");
	run("Threshold...");
	setAutoThreshold("Default dark");
	setThreshold(t, 255);
	run("Find Maxima...", "noise=10 output=[Segmented Particles] above");
	selectImage(title1+" Segmented");
	run("Analyze Particles...", "size=1-100 pixel show=Masks add");
	number = roiManager("count");	
	roiManager("Measure");
	area = 0;
	if( roiManager("count") > 0 ) {
		if(g==1) {
			roiManager("Save",puncta1dir+"ROI_"+titlet+"_"+t+".zip");
			for(j=0;j<nResults;j++)	{
				area = area+ getResult("Area",j);
			}
			area = area/(nResults);
		}
		else if(g==2) {
			roiManager("Save",puncta2dir+"ROI_"+titlet+"_"+t+".zip");
			for(j=0;j<nResults;j++)	{
				area = area+ getResult("Area",j);
			}
			area = area/(nResults);
		}
	}
	roiManager("reset");
	if(g==1) {
		selectImage("Mask of "+title1+" Segmented"); 
		rename(title+"_"+channel1+t+"_mask");
		selectImage(title1+" Segmented");
		close();
			if(t>0){
			selectImage(title+"_"+channel1+t+"_mask");
			run("Select All");
			run("Copy");
			close();
			selectImage(title+"_"+channel1+0+"_mask");
			run("Add Slice");
			setSlice(nSlices);
			titlet = substring(title,0, lengthOf(title)-4);
			run("Set Label...", "label="+titlet+"_"+t);
			run("Paste");
			}
	}
	else if(g==2) {
		selectImage("Mask of "+title1+" Segmented"); 
		rename(title+"_"+channel2+t+"_mask");
		selectImage(title1+" Segmented");
		close();
		if(t>0){
			selectImage(title+"_"+channel2+t+"_mask");
			run("Select All");
			run("Copy");
			close();
			selectImage(title+"_"+channel2+0+"_mask");
			run("Add Slice");
			setSlice(nSlices);
			titlet = substring(title,0, lengthOf(title)-4);
			run("Set Label...", "label="+titlet+"_"+t);
			run("Paste");
		}
	}
}

function overlay() {
	for (p=0; p<threshold1list.length;p++) {
		open(threshold1dir+threshold1list[p]);
		chan1 = getTitle();
		open(threshold2dir+threshold2list[p]);
		chan2 = getTitle();
		run("Merge Channels...", "c1="+chan2+" c2="+chan1+" create");
		saveAs("Tiff",colocdir+"overlay_"+chan1+"-"+chan2);
		close();
	}
}
